import {
  require_react
} from "./chunk-S4LFUXEE.js";
import {
  __commonJS
} from "./chunk-TWLJ45QX.js";

// node_modules/react-typing-game-hook/dist/index.js
var require_dist = __commonJS({
  "node_modules/react-typing-game-hook/dist/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var e = require_react();
    var r = function() {
      return r = Object.assign || function(e2) {
        for (var r2, t2 = 1, a2 = arguments.length; t2 < a2; t2++)
          for (var n2 in r2 = arguments[t2])
            Object.prototype.hasOwnProperty.call(r2, n2) && (e2[n2] = r2[n2]);
        return e2;
      }, r.apply(this, arguments);
    };
    function t(e2, r2) {
      for (var t2 = 0, a2 = r2.length, n2 = e2.length; t2 < a2; t2++, n2++)
        e2[n2] = r2[t2];
      return e2;
    }
    var a;
    var n;
    var c;
    !function(e2) {
      e2._ONTEXTCHANGE = "INTERNAL/ONTEXTCHANGE", e2.RESET = "RESET", e2.END = "END", e2.TYPINGINSERT = "TYPING/INSERT", e2.TYPINGDELETE = "TYPING/DELETE", e2.SETCURRENTINDEX = "SET/CURRENTINDEX";
    }(a || (a = {})), exports.PhaseType = void 0, (n = exports.PhaseType || (exports.PhaseType = {}))[n.NotStarted = 0] = "NotStarted", n[n.Started = 1] = "Started", n[n.Ended = 2] = "Ended", exports.CharStateType = void 0, (c = exports.CharStateType || (exports.CharStateType = {}))[c.Incomplete = 0] = "Incomplete", c[c.Correct = 1] = "Correct", c[c.Incorrect = 2] = "Incorrect";
    var o = function(e2, n2) {
      switch (n2.type) {
        case a.SETCURRENTINDEX:
          return function(e3, t2) {
            var a2, n3 = e3.chars, c2 = e3.length, o2 = null !== (a2 = t2.payload) && void 0 !== a2 ? a2 : null;
            return o2 && "number" == typeof o2 && o2 >= -1 && o2 < c2 ? r(r({}, e3), { currIndex: o2, currChar: n3[o2] }) : e3;
          }(e2, n2);
        case a.RESET:
          return function(e3) {
            var t2 = e3.chars;
            return r(r({}, e3), { startTime: null, endTime: null, charsState: new Array(t2.length).fill(0), currIndex: -1, currChar: "", correctChar: 0, errorChar: 0, phase: 0 });
          }(e2);
        case a.END:
          return function(e3) {
            return r(r({}, e3), { phase: 2, endTime: new Date().getTime() });
          }(e2);
        case a.TYPINGINSERT:
          return function(e3, a2) {
            var n3, c2 = e3.startTime, o2 = e3.endTime, u = e3.chars, s = e3.charsState, i = e3.length, l = e3.currIndex, T = e3.correctChar, p = e3.errorChar, h = e3.phase, E = e3.skipCurrentWordOnSpace, d = e3.pauseOnError, C = e3.countErrors, f = null !== (n3 = a2.payload) && void 0 !== n3 ? n3 : null, y = c2, N = o2;
            if (2 === h)
              return e3;
            0 === h && (h = 1, y = new Date().getTime());
            var v = t([], s);
            if (" " === f && " " !== u[l + 1] && E) {
              var I = u.indexOf(f, l);
              l = -1 === I ? i - 1 : I;
            } else
              null !== f ? u[l + 1] !== f ? (2 == v[l + 1] ? "everytime" === C && (p += 1) : (v[l + 1] = 2, p += 1), d || (l += 1)) : (2 === v[l + 1] && d && "once" === C && (p -= 1), v[l + 1] = 1, T += 1, l += 1) : l += 1;
            l >= i - 1 && (N = new Date().getTime(), h = 2);
            var S = l >= 0 ? u[l] : "";
            return r(r({}, e3), { charsState: v, errorChar: p, correctChar: T, currIndex: l, currChar: S, phase: h, startTime: y, endTime: N });
          }(e2, n2);
        case a.TYPINGDELETE:
          return function(e3, a2) {
            var n3, c2 = e3.chars, o2 = e3.charsState, u = e3.currIndex, s = e3.correctChar, i = e3.errorChar, l = e3.phase, T = e3.countErrors, p = null !== (n3 = a2.payload) && void 0 !== n3 ? n3 : null;
            if (1 !== l || -1 === u)
              return e3;
            var h = t([], o2);
            if (p) {
              var E = c2.lastIndexOf(" ", u);
              E = -1 === E ? 0 : E + 1;
              for (var d = u; d >= E; d--)
                1 === h[d] ? s -= 1 : 2 === h[d] && "once" === T && (i -= 1), h[d] = 0;
              u = E;
            } else
              1 === h[u] ? s -= 1 : 2 === h[u] && "once" === T && (i -= 1), h[u] = 0;
            -1 !== u && (u -= 1);
            var C = u >= 0 ? c2[u] : "";
            return r(r({}, e3), { currIndex: u, currChar: C, charsState: h, correctChar: s, errorChar: i });
          }(e2, n2);
        case a._ONTEXTCHANGE:
          return n2.payload;
        default:
          return e2;
      }
    };
    exports.default = function(t2, n2) {
      void 0 === t2 && (t2 = ""), void 0 === n2 && (n2 = {});
      var c2 = e.useMemo(function() {
        return r({ startTime: null, endTime: null, chars: t2, charsState: new Array(t2.length).fill(0), length: t2.length, currIndex: -1, currChar: "", correctChar: 0, errorChar: 0, phase: 0, skipCurrentWordOnSpace: true, pauseOnError: false, countErrors: "everytime" }, n2);
      }, [n2, t2]), u = e.useReducer(o, c2), s = u[0], i = u[1];
      e.useEffect(function() {
        i({ type: a._ONTEXTCHANGE, payload: c2 });
      }, [t2, i]);
      var l = e.useCallback(function() {
        switch (s.phase) {
          case exports.PhaseType.NotStarted:
            return 0;
          case exports.PhaseType.Started:
            return s.startTime ? new Date().getTime() - s.startTime : 0;
          case exports.PhaseType.Ended:
            return s.startTime && s.endTime ? s.endTime - s.startTime : 0;
        }
      }, [s.phase, s.startTime, s.startTime]), T = e.useCallback(function() {
        return i({ type: a.RESET });
      }, [i]), p = e.useCallback(function() {
        return i({ type: a.END });
      }, [i]), h = e.useCallback(function(e2) {
        var r2 = e2 ? e2[0] : null;
        i({ type: a.TYPINGINSERT, payload: r2 });
      }, [i]), E = e.useCallback(function(e2) {
        void 0 === e2 && (e2 = false), i({ type: a.TYPINGDELETE, payload: e2 || false });
      }, [i]), d = e.useCallback(function(e2) {
        return !(e2 < -1 || e2 >= s.length || 2 !== s.phase) && (i({ type: a.SETCURRENTINDEX, payload: e2 }), true);
      }, [i, s.length, s.phase]);
      return { states: s, actions: { getDuration: l, resetTyping: T, endTyping: p, insertTyping: h, deleteTyping: E, setCurrIndex: d } };
    };
  }
});
export default require_dist();
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
//# sourceMappingURL=react-typing-game-hook.js.map
